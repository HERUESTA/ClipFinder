name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  scan_ruby:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  rubocop:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run rubocop
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips postgresql-client

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: bin/rails db:test:prepare test test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
  
  rspec:
    runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: .
      service:
        postgres:
          image: postgres
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
          ports:
          - 5432:5432
        
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        
        - name: Set up Ruby
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: .ruby-version
            bundler-cache: true

        - name: Cache node modules
          uses: actions/cache@v3
          with:
            path: node_modules 
            key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-node-
          
        - name: Bundler and gem install
          run: |
            gem install bundler 
            bundle install

        - name: Database create and migrate
          run: |
            cp config/database.yml.ci config/database.yml
            bundle exec rails db:create RAILS_ENV=test
            bundle exec rails db:migrate RAILS_ENV=test
        
        - name: Run rspec
          run: bundle exec rspec

